plugins {
    id 'java'
    id 'groovy'
    id "org.springframework.boot" version "2.1.2.RELEASE"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id 'com.adarshr.test-logger' version '1.6.0'
}

group = 'com.otus.spring'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    spockVersion = '1.2-groovy-2.5'
    groovyVersion = '2.5.5'
    springShellVersion = '2.0.1.RELEASE'
    junitJupiterVersion = '5.3.2'
    junitVintageVersion = '5.3.2'
}

dependencies {
    implementation(
        'org.springframework.boot:spring-boot-starter-data-jpa',
        "org.springframework.shell:spring-shell-starter:${springShellVersion}",
        'mysql:mysql-connector-java'
    )
    compileOnly('org.projectlombok:lombok')
    testCompileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    testImplementation(
        'com.h2database:h2',
        "org.spockframework:spock-core:${spockVersion}",
        "org.spockframework:spock-spring:${spockVersion}",
        "org.codehaus.groovy:groovy-all:${groovyVersion}",
        'org.springframework.boot:spring-boot-starter-test',
        "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    )
    testRuntimeOnly(
        "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}",
        "org.junit.vintage:junit-vintage-engine:${junitVintageVersion}"
    )
}

wrapper {
    gradleVersion = '5.1.1'
}

testlogger {
    theme 'mocha-parallel'
    showExceptions true
    slowThreshold 2000
    showSummary true
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams true
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

clean.doFirst {
    delete "out"
}
